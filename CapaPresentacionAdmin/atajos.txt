SELECT * FROM USUARIO 

INSERT INTO USUARIO(NOMBRES,APELLIDOS,CORREO,CONTRASEÑA,ACTIVO) VALUES ('ADMIN2','ADMIN2','ADMIN2@ADMIN.COM',1234,1)

SELECT * FROM CATEGORIA 
SELECT * FROM venta 


INSERT INTO CATEGORIA(DESCRIPCION) VALUES ('TECNOLOGIA'),('MUEBLES'),('DORMITORIO'),('DEPORTE')

SELECT * FROM MARCA 

INSERT INTO MARCA(DESCRIPCION) VALUES ('SONY'),('LG'),('NIKE'),('CASA IDEAS'),('CANNON'),('ROSEN')

SELECT * FROM DETALLE_VENTA 

INSERT INTO REGION(DESCRIPCION) VALUES ('Arica-Parinacota'),('Antofagasta'),('Valparaíso'),('Metropolitana'),('Bío Bío'),('Magallanes y Antártica Chilena')

SELECT * FROM COMUNA 

INSERT INTO COMUNA(DESCRIPCION,ID_REGION) VALUES ('MAIPU',4),('PADRE HURTADO',4),('TACNA',2),('EL BOSQUE',4),('LA UNION',5),('MAGALLANES',6)


SELECT * FROM USUARIO 
SELECT * FROM cliente


INSERT INTO COMUNA(DESCRIPCION,ID_REGION) VALUES ('MAIPU',4),('PADRE HURTADO',4),('TACNA',2),('EL BOSQUE',4),('LA UNION',5),('MAGALLANES',6)





SELECT * FROM CATEGORIA 
 CREATE OR ALTER PROC SP_REGISTRAR_CATEGORIA(
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM CATEGORIA WHERE DESCRIPCION = @DESCRIPCION)
	BEGIN
		INSERT INTO CATEGORIA(DESCRIPCION,ACTIVO) VALUES
		(@DESCRIPCION,@ACTIVO)

		SET @RESULTADO = SCOPE_IDENTITY()
	END
	ELSE
		SET @MENSAJE = 'La categoria ya existe'
END








SELECT * FROM CATEGORIA 
 CREATE OR ALTER PROC SP_EDITAR_CATEGORIA(
	  @IDCATEGORIA VARCHAR(100),
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM CATEGORIA WHERE DESCRIPCION = @DESCRIPCION AND ID_CATEGORIA != @IDCATEGORIA)
	BEGIN
		UPDATE TOP (1) CATEGORIA SET
		DESCRIPCION = @DESCRIPCION,
		ACTIVO = @ACTIVO
		WHERE ID_CATEGORIA = @IDCATEGORIA
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La categoria ya existe'
END


CREATE OR ALTER PROC SP_ELIMINAR_CATEGORIA(
	  @IDCATEGORIA VARCHAR(100),
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM PRODUCTO P
		INNER JOIN CATEGORIA C
		ON C.ID_CATEGORIA = P.ID_CATEGORIA
		WHERE P.ID_CATEGORIA= @IDCATEGORIA)
	BEGIN
		DELETE TOP (1) FROM CATEGORIA 
		WHERE ID_CATEGORIA = @IDCATEGORIA
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La categoria se encuentra relacionada a un producto'
END







SELECT * FROM MARCA 
 CREATE OR ALTER PROC SP_REGISTRAR_MARCA(
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM MARCA WHERE DESCRIPCION = @DESCRIPCION)
	BEGIN
		INSERT INTO MARCA(DESCRIPCION,ACTIVO) VALUES
		(@DESCRIPCION,@ACTIVO)

		SET @RESULTADO = SCOPE_IDENTITY()
	END
	ELSE
		SET @MENSAJE = 'La MARCA ya existe'
END








SELECT * FROM MARCA 
 CREATE OR ALTER PROC SP_EDITAR_MARCA(
	  @IDMARCA VARCHAR(100),
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM MARCA WHERE DESCRIPCION = @DESCRIPCION AND ID_MARCA != @IDMARCA)
	BEGIN
		UPDATE TOP (1) MARCA SET
		DESCRIPCION = @DESCRIPCION,
		ACTIVO = @ACTIVO
		WHERE ID_MARCA = @IDMARCA
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La MARCA ya existe'
END


CREATE OR ALTER PROC SP_ELIMINAR_MARCA(
	  @IDMARCA VARCHAR(100),
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM PRODUCTO P
		INNER JOIN MARCA C
		ON C.ID_MARCA = P.ID_MARCA
		WHERE P.ID_MARCA= @IDMARCA)
	BEGIN
		DELETE TOP (1) FROM MARCA 
		WHERE ID_MARCA = @IDMARCA
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La MARCA se encuentra relacionada a un producto'
END


SELECT * FROM REGION 
 CREATE OR ALTER PROC SP_REGISTRAR_REGION(
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM REGION WHERE DESCRIPCION = @DESCRIPCION)
	BEGIN
		INSERT INTO REGION(DESCRIPCION,ACTIVO) VALUES
		(@DESCRIPCION,@ACTIVO)

		SET @RESULTADO = SCOPE_IDENTITY()
	END
	ELSE
		SET @MENSAJE = 'La REGION ya existe'
END








SELECT * FROM comuna 
 CREATE OR ALTER PROC SP_EDITAR_REGION(
	  @IDREGION VARCHAR(100),
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM REGION WHERE DESCRIPCION = @DESCRIPCION AND ID_REGION != @IDREGION)
	BEGIN
		UPDATE TOP (1) REGION SET
		DESCRIPCION = @DESCRIPCION,
		ACTIVO = @ACTIVO
		WHERE ID_REGION = @IDREGION
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La REGION ya existe'
END


CREATE OR ALTER PROC SP_ELIMINAR_REGION(
	  @IDREGION VARCHAR(100),
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM COMUNA P
		INNER JOIN REGION C
		ON C.ID_REGION = P.ID_REGION
		WHERE P.ID_REGION= @IDREGION)
	BEGIN
		DELETE TOP (1) FROM REGION 
		WHERE ID_REGION = @IDREGION
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La REGION se encuentra relacionada a un producto'
END


SELECT * FROM COMUNA 
 CREATE OR ALTER PROC SP_REGISTRAR_COMUNA(
	  @DESCRIPCION VARCHAR(100),
	  @ACTIVO BIT,
      @ID_REGION INT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM COMUNA WHERE DESCRIPCION = @DESCRIPCION)
	BEGIN
		INSERT INTO COMUNA(DESCRIPCION,ACTIVO) VALUES
		(@DESCRIPCION,@ACTIVO)

		SET @RESULTADO = SCOPE_IDENTITY()
	END
	ELSE
		SET @MENSAJE = 'La COMUNA ya existe'
END








SELECT * FROM COMUNA 
 CREATE OR ALTER PROC SP_EDITAR_COMUNA(
	  @IDCOMUNA VARCHAR(100),
	  @DESCRIPCION VARCHAR(100),
      @ID_REGION INT,
	  @ACTIVO BIT,
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM COMUNA WHERE DESCRIPCION = @DESCRIPCION AND ID_COMUNA != @IDCOMUNA)
	BEGIN
		UPDATE TOP (1) COMUNA SET
		DESCRIPCION = @DESCRIPCION,
		ACTIVO = @ACTIVO
		WHERE ID_COMUNA = @IDCOMUNA
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La COMUNA ya existe'
END


CREATE OR ALTER PROC SP_ELIMINAR_COMUNA(
	  @IDCOMUNA VARCHAR(100),
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM VENTA V
		INNER JOIN COMUNA C
		ON C.ID_COMUNA = V.ID_COMUNA
		WHERE V.ID_COMUNA= @IDCOMUNA)
	BEGIN
		DELETE TOP (1) FROM COMUNA 
		WHERE ID_COMUNA = @IDCOMUNA
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La COMUNA se encuentra relacionada a un producto'
END



#PROUCTO

SELECT * FROM PRODUCTO 
 CREATE OR ALTER PROC SP_REGISTRAR_PRODUCTO(
	@NOMBRE	VARCHAR(100),
	@DESCRIPTION VARCHAR(100),
	@ID_MARCA INT,
	@ID_CATEGORIA INT,
	@PRECIO DECIMAL(10,2),
	@STOCK INT,
	@ACTIVO BIT,
	@MENSAJE VARCHAR(500) OUTPUT,
	@RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM PRODUCTO WHERE NOMBRE = @NOMBRE)
	BEGIN
		INSERT INTO PRODUCTO(NOMBRE,DESCRIPTION,ID_MARCA,ID_CATEGORIA,PRECIO,STOCK,ACTIVO) VALUES
		(@NOMBRE,@DESCRIPTION,@ID_MARCA,@ID_CATEGORIA,@PRECIO,@STOCK,@ACTIVO)

		SET @RESULTADO = SCOPE_IDENTITY()
	END
	ELSE
		SET @MENSAJE = 'La PRODUCTO ya existe'
END








SELECT * FROM PRODUCTO 
 CREATE OR ALTER PROC SP_EDITAR_PRODUCTO(
    @IDPRODUCTO INT,
	@NOMBRE	VARCHAR(100),
	@DESCRIPTION VARCHAR(100),
	@ID_MARCA INT,
	@ID_CATEGORIA INT,
	@PRECIO DECIMAL(10,2),
	@STOCK INT,
	@ACTIVO BIT,
	@MENSAJE VARCHAR(500) OUTPUT,
	@RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM PRODUCTO WHERE NOMBRE = @NOMBRE AND ID_PRODUCTO != @IDPRODUCTO)
	BEGIN
		UPDATE TOP (1) PRODUCTO SET
		NOMBRE = @NOMBRE,
		DESCRIPTION = @DESCRIPTION,
		ID_MARCA = @ID_MARCA,
		ID_CATEGORIA = @ID_CATEGORIA,
		PRECIO = @PRECIO,
		STOCK = @STOCK,
		ACTIVO = @ACTIVO
		WHERE ID_PRODUCTO = @ID_PRODUCTO
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La PRODUCTO ya existe'
END


CREATE OR ALTER PROC SP_ELIMINAR_PRODUCTO(
	  @ID_PRODUCTO VARCHAR(100),
	  @MENSAJE VARCHAR(500) OUTPUT,
	  @RESULTADO INT OUTPUT
  )
  AS
  BEGIN
	SET @RESULTADO = 0
	IF NOT EXISTS (SELECT * FROM DETALLE_VENTA DV
		INNER JOIN PRODUCTO P
		ON P.ID_PRODUCTO = DV.ID_PRODUCTO
		WHERE P.ID_PRODUCTO= @ID_PRODUCTO)
	BEGIN
		DELETE TOP (1) FROM PRODUCTO 
		WHERE ID_PRODUCTO = @ID_PRODUCTO
		SET @RESULTADO = 1
	END
	ELSE
		SET @MENSAJE = 'La PRODUCTO se encuentra relacionada a un producto'
END